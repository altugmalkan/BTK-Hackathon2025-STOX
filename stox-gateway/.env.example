# STOX Gateway Environment Variables
# Copy this file to .env and fill in your actual values

# Database Configuration (REQUIRED)
DB_HOST=postgres
DB_PORT=5432
DB_USERNAME=postgres
DB_PASSWORD=your-secure-database-password-here
DB_NAME=stox_auth
DB_MAX_CONNECTIONS=10
DB_MIN_CONNECTIONS=1

# JWT Secrets (REQUIRED - Generate strong secrets at least 32 characters)
JWT_ACCESS_SECRET=your-super-secure-access-secret-here-at-least-32-characters-long
JWT_REFRESH_SECRET=your-super-secure-refresh-secret-here-at-least-32-characters-long
JWT_ACCESS_EXPIRES_IN=15m
JWT_REFRESH_EXPIRES_IN=7d
JWT_SECRET_KEY=your-super-secret-jwt-key-change-this-in-production

# AWS Configuration (REQUIRED)
# Values from your AWS infrastructure setup
AWS_REGION=us-east-1
AWS_S3_BUCKET_NAME=your-s3-bucket-name
AWS_S3_REGION=us-east-1
AWS_CLOUDFRONT_DISTRIBUTION_ID=DISTRIBUTION_ID_HERE
AWS_CLOUDFRONT_DOMAIN_NAME=your-domain.cloudfront.net
AWS_CLOUDFRONT_REGION=us-east-1

# AWS Credentials (REQUIRED for local development)
# In production, use IAM roles instead
# Get these from: aws configure list
AWS_ACCESS_KEY_ID=SOME-ACCESS-KEY-ID-HERE
AWS_SECRET_ACCESS_KEY=SOME-SECRET-ACCESS-KEY-HERE
# Application Configuration (Optional - has defaults)
SERVER_PORT=8080
ENVIRONMENT=development

# AI Service Configuration (for Image Service)
GEMINI_API_KEY=your-gemini-api-key-here

# MockECommerce API Configuration
MOCK_ECOMMERCE_API_KEY=your-mock-ecommerce-api-key-here

# Service Endpoints (Optional - has defaults for Docker)
AUTH_SERVICE_HOST=auth-service
AUTH_SERVICE_PORT=50051
IMAGE_SERVICE_HOST=image-service
IMAGE_SERVICE_PORT=50061